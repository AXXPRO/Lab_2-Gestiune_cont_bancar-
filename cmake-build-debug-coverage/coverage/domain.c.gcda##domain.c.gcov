        -:    0:Source:C:/Users/Gabi/Desktop/Lab_2-Gestiune_cont_bancar-/Infrastructura/domain.c
        -:    0:Graph:C:\Users\Gabi\Desktop\Lab_2-Gestiune_cont_bancar-\cmake-build-debug-coverage\CMakeFiles\Lab_2_Gestiune_cont_bancar_.dir\Infrastructura\domain.c.gcno
        -:    0:Data:C:\Users\Gabi\Desktop\Lab_2-Gestiune_cont_bancar-\cmake-build-debug-coverage\CMakeFiles\Lab_2_Gestiune_cont_bancar_.dir\Infrastructura\domain.c.gcda
        -:    0:Runs:1
        -:    1:
        -:    2:#include "../Infrastructura/domain.h"
        -:    3:
        -:    4:
        -:    5:#include <stdio.h>
        -:    6:#include <stdlib.h>
        -:    7:#include <string.h>
function creaza_tranzactie called 42 returned 100% blocks executed 100%
       42:    8:Tranzactie* creaza_tranzactie(int id, int suma, int ziua, enum tip tip, char* descriere)
        -:    9:{
       42:   10:    Tranzactie* tranz =  (Tranzactie*)malloc(sizeof(Tranzactie));
       42:   11:    tranz->id = id;
       42:   12:    tranz->suma = suma;
       42:   13:    tranz->ziua = ziua;
       42:   14:    tranz->tip = tip;
       42:   15:    tranz->descriere = descriere;
        -:   16:
       42:   17:    return tranz;
       42:   17-block  0
        -:   18:}
        -:   19:
function copie_tranzactie called 8 returned 100% blocks executed 100%
        8:   20:Tranzactie * copie_tranzactie(Tranzactie* tranz)
        -:   21:{
        8:   22:    char* descriere = (char*) malloc(sizeof (char)*50);
        8:   23:    strcpy(descriere, get_descriere(tranz));
        8:   23-block  0
call    0 returned 8
        8:   24:    return creaza_tranzactie(get_id(tranz), get_suma(tranz), get_ziua(tranz), get_tip(tranz),descriere);
call    0 returned 8
call    1 returned 8
call    2 returned 8
call    3 returned 8
call    4 returned 8
        -:   25:
        -:   26:}
function get_id called 135 returned 100% blocks executed 100%
      135:   27:int get_id(Tranzactie* tranzactie)
        -:   28:{
      135:   29:    return tranzactie->id;
      135:   29-block  0
        -:   30:}
function get_suma called 59 returned 100% blocks executed 100%
       59:   31:int get_suma(Tranzactie* tranzactie)
        -:   32:{
       59:   33:    return tranzactie->suma;
       59:   33-block  0
        -:   34:}
function set_suma called 3 returned 100% blocks executed 100%
        3:   35:void set_suma(Tranzactie* tranzactie, int suma)
        -:   36:{
        3:   37:    tranzactie->suma = suma;
        -:   38:
        3:   39:}
        -:   40:
function get_tip called 32 returned 100% blocks executed 100%
       32:   41:enum tip get_tip(Tranzactie* tranzactie)
        -:   42:{
       32:   43:    return tranzactie->tip;
       32:   43-block  0
        -:   44:}
function set_tip called 4 returned 100% blocks executed 100%
        4:   45:void set_tip(Tranzactie* tranzactie, enum tip tip)
        -:   46:{
        4:   47:  tranzactie->tip = tip;
        4:   48:}
function set_id called 1 returned 100% blocks executed 100%
        1:   49:void set_id(Tranzactie* tranzactie, int id)
        -:   50:{
        1:   51:    tranzactie->id = id;
        1:   52:}
function get_ziua called 42 returned 100% blocks executed 100%
       42:   53:int get_ziua(Tranzactie* tranzactie)
        -:   54:{
       42:   55:    return tranzactie->ziua;
       42:   55-block  0
        -:   56:}
        -:   57:
function set_ziua called 3 returned 100% blocks executed 100%
        3:   58:void set_ziua(Tranzactie* tranzactie, int ziua)
        -:   59:{
        3:   60:    tranzactie->ziua = ziua;
        3:   61:}
        -:   62:
function get_descriere called 42 returned 100% blocks executed 100%
       42:   63:char* get_descriere(Tranzactie* tranzactie)
        -:   64:{
       42:   65:   return tranzactie->descriere;
       42:   65-block  0
        -:   66:}
        -:   67:
function set_descriere called 3 returned 100% blocks executed 100%
        3:   68:void set_descriere(Tranzactie* tranzactie, char* descriere)
        -:   69:{
        3:   70:    tranzactie->descriere = descriere;
        3:   71:}
        -:   72:
function string_tranzactie called 4 returned 100% blocks executed 100%
        4:   73:char* string_tranzactie(Tranzactie* tranz)
        -:   74:{ 
        -:   75:
        4:   76:    char* string = (char*)malloc(sizeof(char)*100);
        4:   77:    string[0]='\0';
        4:   78:    strcat(string,"Tranzactia cu id-ul ");
        -:   79:
        -:   80:   // char id[100], suma[100], ziua[100]
        -:   81:   char id[10] ,suma[10],ziua[10];
        4:   82:  int id_get = get_id(tranz);
        4:   82-block  0
call    0 returned 4
        4:   83:  int suma_get = get_suma(tranz);
call    0 returned 4
        4:   84:  int ziua_get = get_ziua(tranz);
call    0 returned 4
        -:   85:
        -:   86:
        4:   87:    sprintf(id,"%d",id_get);
call    0 returned 4
        4:   88:    sprintf(ziua,"%d",ziua_get);
call    0 returned 4
        4:   89:    sprintf(suma,"%d",suma_get);
call    0 returned 4
        4:   90:    strcat(string,id);
        4:   91:    strcat(string," si suma ");
        -:   92:
        4:   93:    strcat(string,suma);
        -:   94:
        4:   95:    strcat(string," din ziua ");
        -:   96:
        4:   97:    strcat(string,ziua);
        -:   98:
        4:   99:    strcat(string," de tipul ");
        -:  100:
        4:  101:    enum tip tip = get_tip(tranz);
call    0 returned 4
        4:  102:    if(tip == intrare)
branch  0 taken 3 (fallthrough)
branch  1 taken 1
        3:  103:    strcat(string,"intrare");
        3:  103-block  0
        -:  104:    else
        1:  105:    strcat(string,"iesire"); 
        1:  105-block  0
        -:  106:
        4:  107:     strcat(string," are descrierea ");
        -:  108:
        4:  109:     char *p = get_descriere(tranz);
        4:  109-block  0
call    0 returned 4
        4:  110:     strcat(string, p);
        -:  111:
        4:  112:     return string;
        -:  113:
        -:  114:    
        -:  115:}
