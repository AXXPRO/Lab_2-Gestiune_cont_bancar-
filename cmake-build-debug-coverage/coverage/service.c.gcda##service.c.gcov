        -:    0:Source:C:/Users/Gabi/Desktop/Lab_2-Gestiune_cont_bancar-/Service/service.c
        -:    0:Graph:C:\Users\Gabi\Desktop\Lab_2-Gestiune_cont_bancar-\cmake-build-debug-coverage\CMakeFiles\Lab_2_Gestiune_cont_bancar_.dir\Service\service.c.gcno
        -:    0:Data:C:\Users\Gabi\Desktop\Lab_2-Gestiune_cont_bancar-\cmake-build-debug-coverage\CMakeFiles\Lab_2_Gestiune_cont_bancar_.dir\Service\service.c.gcda
        -:    0:Runs:1
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include <string.h>
        -:    4:#include "..\Infrastructura\domain.h"
        -:    5:#include "..\Infrastructura\repo.h"
        -:    6:#include "..\Validation\valid.h"
        -:    7:
function modificare_service called 2 returned 100% blocks executed 100%
        2:    8:int modificare_service(int id_de_schimbat, int suma, int ziua, enum tip tip, char* descriere, lista* l)
        -:    9:{
        2:   10:Tranzactie* tranz = creaza_tranzactie(id_de_schimbat,suma,ziua,tip,descriere);
        2:   10-block  0
call    0 returned 2
        -:   11:
        2:   12:Tranzactie* tranz_cautata = get_tranzactie(l,id_de_schimbat);
call    0 returned 2
        2:   13:if(tranz_cautata == (Tranzactie*)NULL || !tranzactie_valida(tranz))
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1:   13-block  0
call    2 returned 1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
        1:   14:    return 0;
        1:   14-block  0
        -:   15:
        1:   16:modificare_tranzactie(l,tranz, id_de_schimbat);
        1:   16-block  0
call    0 returned 1
        1:   17:free(tranz);
        1:   18:return 1;
        -:   19:
        -:   20:
        -:   21:}
function afisare_service called 2 returned 100% blocks executed 100%
        2:   22:char* afisare_service(lista* l)
        -:   23:{
        2:   24:    char* descriere_returnat = (char*)malloc(sizeof (char)*500* numar_elemente(l));
        2:   24-block  0
call    0 returned 2
        -:   25:
        2:   26:    descriere_returnat[0] = '\0';
        2:   27:    if(numar_elemente(l) == 0)
call    0 returned 2
branch  1 taken 1 (fallthrough)
branch  2 taken 1
        1:   28:        return descriere_returnat;
        1:   28-block  0
        1:   29:    Tranzactie** lista_tranzactii = get_all(l);
        1:   29-block  0
call    0 returned 1
        -:   30:
        -:   31:    char* temp_char;
        1:   32:    temp_char  =string_tranzactie(lista_tranzactii[0]);
call    0 returned 1
        1:   33:    strcpy(descriere_returnat,temp_char);
        -:   34:
        1:   35:    free(temp_char);
        -:   36:   // free(descriere_returnat);
        1:   37:    strcat(descriere_returnat, "\n");
        -:   38:
        -:   39:
        2:   40:    for(int i =1; i< numar_elemente(l); i++)
        2:   40-block  0
call    0 returned 2
branch  1 taken 1
branch  2 taken 1 (fallthrough)
        -:   41:    {
        1:   42:        temp_char  =string_tranzactie(lista_tranzactii[i]);
        1:   42-block  0
call    0 returned 1
        1:   43:        strcat(descriere_returnat, temp_char);
        1:   44:        free(temp_char);
        1:   45:        strcat(descriere_returnat, "\n");
        -:   46:    }
        -:   47:
        -:   48:
        1:   49:    return descriere_returnat;
        1:   49-block  0
        -:   50:
        -:   51:}
        -:   52:
function stergere_service called 3 returned 100% blocks executed 100%
        3:   53:int stergere_service(int id_de_sters, lista* l)
        -:   54:{
        -:   55:
        3:   56:    return sterge_tranzactie(l, id_de_sters);
        3:   56-block  0
call    0 returned 3
        -:   57:}
        -:   58:
function adaugare_service called 3 returned 100% blocks executed 100%
        3:   59:int adaugare_service(int id, int suma, int ziua, enum tip tip, char* descriere, lista* l)
        -:   60:{
        -:   61:
        3:   62:    Tranzactie* tranz = creaza_tranzactie(id,suma,ziua,tip,descriere);
        3:   62-block  0
call    0 returned 3
        -:   63:
        3:   64:    if(tranzactie_valida(tranz))
call    0 returned 3
branch  1 taken 2 (fallthrough)
branch  2 taken 1
        -:   65:    {
        2:   66:        adaugare_tranzactie(l,tranz);
        2:   66-block  0
call    0 returned 2
        2:   67:        return 1;
        -:   68:    }
        -:   69:    else 
        -:   70:    {
        1:   71:        return 0;
        1:   71-block  0
        -:   72:    }
        -:   73:
        -:   74:}
