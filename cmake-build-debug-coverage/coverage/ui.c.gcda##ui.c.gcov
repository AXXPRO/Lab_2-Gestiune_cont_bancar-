        -:    0:Source:C:/Users/Gabi/Desktop/Lab_2-Gestiune_cont_bancar-/UI/ui.c
        -:    0:Graph:C:\Users\Gabi\Desktop\Lab_2-Gestiune_cont_bancar-\cmake-build-debug-coverage\CMakeFiles\Lab_2_Gestiune_cont_bancar_.dir\UI\ui.c.gcno
        -:    0:Data:C:\Users\Gabi\Desktop\Lab_2-Gestiune_cont_bancar-\cmake-build-debug-coverage\CMakeFiles\Lab_2_Gestiune_cont_bancar_.dir\UI\ui.c.gcda
        -:    0:Runs:1
        -:    1:
        -:    2:#include <string.h>
        -:    3:#include <stdio.h>
        -:    4:#include <stdlib.h>
        -:    5:#include "../Service/service.h"
        -:    6:#include "ui.h"
        -:    7://#include <stdlib.h>
        -:    8:
        -:    9:
        -:   10:/*
        -:   11:Functia ia un sir de caractere si returneaza daca este sau nu numar
        -:   12:PreconditiiL s - sir de caractere cu \0 la sfarsit
        -:   13:Postconditii: 1 daca poate fi numar, 0 altfel
        -:   14:*/
function is_number called 0 returned 0% blocks executed 0%
    #####:   15:int is_number(char* s)
        -:   16:{   
        -:   17:
    #####:   18:    if (strlen(s)==0)
    %%%%%:   18-block  0
branch  0 never executed
branch  1 never executed
    #####:   19:        return 0;
    %%%%%:   19-block  0
    #####:   20:    int i=0;
    #####:   21:    if(s[0]=='-')
    %%%%%:   21-block  0
branch  0 never executed
branch  1 never executed
    #####:   22:        i=1;
    %%%%%:   22-block  0
        -:   23:
        -:   24:
        -:   25:
    #####:   26:    for(; i<strlen(s); i++)
    %%%%%:   26-block  0
    %%%%%:   26-block  1
    %%%%%:   26-block  2
branch  0 never executed
branch  1 never executed
        -:   27:    {
    #####:   28:        if(s[i] - '0' < 0 || s[i]- '0' > 9)
    %%%%%:   28-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   28-block  1
branch  2 never executed
branch  3 never executed
    #####:   29:            return 0;
    %%%%%:   29-block  0
        -:   30:    }
        -:   31:
    #####:   32:    return 1;
    %%%%%:   32-block  0
        -:   33:}
        -:   34:
function interface called 0 returned 0% blocks executed 0%
    #####:   35:void interface()
    #####:   36:{ system("cls");
    %%%%%:   36-block  0
call    0 never executed
    #####:   37:  printf("Alegeti optiunea pe care o doriti. Optiunile sunt urmatoarele:\n");
call    0 never executed
    #####:   38:  printf("1.Adaugare de tranzactii.\n");
call    0 never executed
    #####:   39:  printf("2.Modificare tranzactie existenta.\n");
call    0 never executed
    #####:   40:  printf("3.Stergere tranzactie existenta.\n");
call    0 never executed
    #####:   41:  printf("4.Vizualizare tranzactii dupa un criteriu.\n");
call    0 never executed
    #####:   42:  printf("5.Vizualizare tranzactii ordonat dupa suma\n");
call    0 never executed
    #####:   43:  printf("6.Afisarea tranzactiilor din aplicatie.\n");
call    0 never executed
    #####:   44:  printf("7.Inchidere aplicatie.\n");
call    0 never executed
    #####:   45:  printf(">>>");
call    0 never executed
        -:   46:
    #####:   47:}
        -:   48:
        -:   49:
        -:   50:
        -:   51:
        -:   52:
function run_ui called 0 returned 0% blocks executed 0%
    #####:   53:void run_ui()
    #####:   54:{   lista* lista_tranzactii = creaza_lista(tranzactii);
    %%%%%:   54-block  0
call    0 never executed
        -:   55:
        -:   56:
        -:   57:    char choice[20];
    #####:   58:    int program_running = 1;
        -:   59:    int number_choice;
    #####:   60:    while(program_running)
    %%%%%:   60-block  0
branch  0 never executed
branch  1 never executed
        -:   61:    {
    #####:   62:        interface();
    %%%%%:   62-block  0
call    0 never executed
        -:   63:        //scanf("%s", choice);
    #####:   64:        gets(choice);
call    0 never executed
    #####:   65:        if(strlen(choice)==1)
branch  0 never executed
branch  1 never executed
        -:   66:        {
        -:   67:           
        -:   68:            //Run program
    #####:   69:                number_choice = choice[0]-'0';
    #####:   70:                switch (number_choice)
    %%%%%:   70-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
        -:   71:                {
    #####:   72:                    case 1:
    #####:   73:                    adaugare(lista_tranzactii);
    %%%%%:   73-block  0
call    0 never executed
    #####:   74:                    break;
    #####:   75:                    case 2:
    #####:   76:                    modificare(lista_tranzactii);
    %%%%%:   76-block  0
call    0 never executed
    #####:   77:                    break;
    #####:   78:                    case 3:
    #####:   79:                    stergere(lista_tranzactii);
    %%%%%:   79-block  0
call    0 never executed
    #####:   80:                    break;
    #####:   81:                    case 4:
    #####:   82:                    criteriu(lista_tranzactii);
    %%%%%:   82-block  0
call    0 never executed
    #####:   83:                    break;
    #####:   84:                    case 5:
    #####:   85:                        ordonat(lista_tranzactii);
    %%%%%:   85-block  0
call    0 never executed
    #####:   86:                    break;
    #####:   87:                    case 6:
    #####:   88:                   afisare(lista_tranzactii);
    %%%%%:   88-block  0
call    0 never executed
        -:   89:
    #####:   90:                    break;
    #####:   91:                    case 7:
    #####:   92:                    program_running = 0;
    #####:   93:                        distruge_lista_tranzactii(lista_tranzactii);
    %%%%%:   93-block  0
call    0 never executed
    #####:   94:                    break;
    #####:   95:                default:
        -:   96:                {
    #####:   97:                printf("Varianta inexistenta!\n");
    %%%%%:   97-block  0
call    0 never executed
    #####:   98:                gets(choice);
call    0 never executed
        -:   99:                }
    #####:  100:                    break;
        -:  101:                }
        -:  102:
        -:  103:
        -:  104:            
        -:  105:          
        -:  106:        }
    #####:  107:        else{printf("Varianta inexistenta!\n");
    %%%%%:  107-block  0
call    0 never executed
    #####:  108:                gets(choice);}
call    0 never executed
        -:  109:
        -:  110:
        -:  111:
        -:  112:    }
        -:  113:    
        -:  114:
    #####:  115:}
        -:  116:
        -:  117://This pointer is requiered to call the strtol function
        -:  118:char* strtol_pointer;
function ordonat called 0 returned 0% blocks executed 0%
    #####:  119:void ordonat(lista* l)
        -:  120:{
        -:  121:    char alegere[50];
    #####:  122:    printf("Cum doriti sa sortam lista?\n1. Crescator\n2. Descrescator\n");
    %%%%%:  122-block  0
call    0 never executed
    #####:  123:    gets(alegere);
call    0 never executed
        -:  124:
        -:  125:
    #####:  126:    if(is_number(alegere))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  127:    {
    #####:  128:        int numar = strtol(alegere,&strtol_pointer,10);
    %%%%%:  128-block  0
call    0 never executed
    #####:  129:        if(numar <1 || numar >2)
branch  0 never executed
branch  1 never executed
    %%%%%:  129-block  0
branch  2 never executed
branch  3 never executed
        -:  130:        {
    #####:  131:            printf("Varianta inexistenta!");
    %%%%%:  131-block  0
call    0 never executed
    #####:  132:            getchar();
call    0 never executed
        -:  133:        }
        -:  134:        else
        -:  135:
        -:  136:        {
        -:  137:            lista* lista_ordonata;
    #####:  138:            if(numar == 1)
    %%%%%:  138-block  0
branch  0 never executed
branch  1 never executed
    #####:  139:            lista_ordonata = ordonat_service(l,1);
    %%%%%:  139-block  0
call    0 never executed
        -:  140:            else
    #####:  141:                lista_ordonata = ordonat_service(l,-1);
    %%%%%:  141-block  0
call    0 never executed
        -:  142:
        -:  143:
    #####:  144:            afisare(lista_ordonata);
    %%%%%:  144-block  0
call    0 never executed
    #####:  145:            distruge_lista_tranzactii(lista_ordonata);
call    0 never executed
        -:  146:
        -:  147:
        -:  148:        }
        -:  149:
        -:  150:    }
        -:  151:    else
        -:  152:
        -:  153:    {
    #####:  154:        printf("Varianta inexistenta!");
    %%%%%:  154-block  0
call    0 never executed
    #####:  155:        getchar();
call    0 never executed
        -:  156:    }
    #####:  157:}
function criteriu_suma called 0 returned 0% blocks executed 0%
    #####:  158:void criteriu_suma(lista* l)
        -:  159:{
        -:  160:    char alegere[50];
        -:  161:    char suma[50];
    #####:  162:    printf("Cum doriti sa filtram dupa suma?\n1. Mai mari decat o suma data\n2. Mai mici decat o suma data\n");
    %%%%%:  162-block  0
call    0 never executed
    #####:  163:    gets(alegere);
call    0 never executed
        -:  164:
    #####:  165:    if(is_number(alegere))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  166:    {
    #####:  167:        int numar = strtol(alegere,&strtol_pointer,10);
    %%%%%:  167-block  0
call    0 never executed
    #####:  168:        if(numar <1 || numar >2)
branch  0 never executed
branch  1 never executed
    %%%%%:  168-block  0
branch  2 never executed
branch  3 never executed
        -:  169:        {
    #####:  170:            printf("Varianta inexistenta!");
    %%%%%:  170-block  0
call    0 never executed
    #####:  171:            getchar();
call    0 never executed
        -:  172:        }
        -:  173:        else
        -:  174:
        -:  175:        {
    #####:  176:            printf("Dati suma cu care comparam\n");
    %%%%%:  176-block  0
call    0 never executed
    #####:  177:            gets(suma);
call    0 never executed
    #####:  178:            if(is_number(suma))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  179:            {
    #####:  180:                int suma_numar = strtol(suma,&strtol_pointer,10);
    %%%%%:  180-block  0
call    0 never executed
        -:  181:                lista* l_temporara;
    #####:  182:                if(numar == 1)
branch  0 never executed
branch  1 never executed
        -:  183:                {
    #####:  184:                     l_temporara= criteriu_suma_service(l,suma_numar,1);
    %%%%%:  184-block  0
call    0 never executed
        -:  185:                }
        -:  186:                else
        -:  187:                {
    #####:  188:                   l_temporara= criteriu_suma_service(l,suma_numar,-1);
    %%%%%:  188-block  0
call    0 never executed
        -:  189:                }
    #####:  190:                afisare(l_temporara);
    %%%%%:  190-block  0
call    0 never executed
    #####:  191:                distruge_lista_tranzactii(l_temporara);
call    0 never executed
        -:  192:            }
        -:  193:            else{
    #####:  194:                printf("Suma invalida!");
    %%%%%:  194-block  0
call    0 never executed
    #####:  195:                getchar();
call    0 never executed
        -:  196:            }
        -:  197:        }
        -:  198:
        -:  199:    }
        -:  200:    else
        -:  201:
        -:  202:    {
    #####:  203:        printf("Varianta inexistenta!");
    %%%%%:  203-block  0
call    0 never executed
    #####:  204:        getchar();
call    0 never executed
        -:  205:    }
        -:  206:
    #####:  207:}
function criteriu_tip called 0 returned 0% blocks executed 0%
    #####:  208:void criteriu_tip(lista* l)
        -:  209:{char alegere[50];
    #####:  210:    printf("Tranzactiile cu ce tip doriti sa le vedeti?\n1. Intrare\n2. Iesire");
    %%%%%:  210-block  0
call    0 never executed
    #####:  211:    gets(alegere);
call    0 never executed
    #####:  212:    if(is_number(alegere))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  213:    {
    #####:  214:        int numar = strtol(alegere,&strtol_pointer,10);
    %%%%%:  214-block  0
call    0 never executed
    #####:  215:        if(numar <1 || numar >2)
branch  0 never executed
branch  1 never executed
    %%%%%:  215-block  0
branch  2 never executed
branch  3 never executed
        -:  216:        {
    #####:  217:            printf("Varianta inexistenta!");
    %%%%%:  217-block  0
call    0 never executed
    #####:  218:            getchar();
call    0 never executed
        -:  219:        }
        -:  220:        else
        -:  221:
        -:  222:        {
        -:  223:            enum tip tipul;
    #####:  224:            if(numar == 1)
    %%%%%:  224-block  0
branch  0 never executed
branch  1 never executed
    #####:  225:                tipul = intrare;
    %%%%%:  225-block  0
        -:  226:            else
    #####:  227:             tipul = iesire;
    %%%%%:  227-block  0
        -:  228:            lista* l_temporara;
    #####:  229:            l_temporara = criteriu_tip_service(l, tipul);
    %%%%%:  229-block  0
call    0 never executed
    #####:  230:            afisare(l_temporara);
call    0 never executed
        -:  231:
    #####:  232:            distruge_lista_tranzactii(l_temporara);
call    0 never executed
        -:  233:
        -:  234:        }
        -:  235:
        -:  236:    }
        -:  237:    else
        -:  238:
        -:  239:    {
    #####:  240:        printf("Varianta inexistenta!");
    %%%%%:  240-block  0
call    0 never executed
    #####:  241:        getchar();
call    0 never executed
        -:  242:    }
        -:  243:
        -:  244:
    #####:  245:}
function criteriu called 0 returned 0% blocks executed 0%
    #####:  246:void criteriu(lista* l)
        -:  247:{
        -:  248:    char alegere[50];
    #####:  249:  printf("Ce criteriu de sortare doriti?\n 1. Dupa tip\n 2. Dupa suma\n");
    %%%%%:  249-block  0
call    0 never executed
    #####:  250: gets(alegere);
call    0 never executed
    #####:  251:  if(is_number(alegere))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  252:  {
    #####:  253:int numar = strtol(alegere,&strtol_pointer,10);
    %%%%%:  253-block  0
call    0 never executed
        -:  254:
    #####:  255:switch(numar)
branch  0 never executed
branch  1 never executed
branch  2 never executed
        -:  256:
        -:  257:{
    #####:  258:    case 1:
    #####:  259:         criteriu_tip(l);
    %%%%%:  259-block  0
call    0 never executed
    #####:  260:        break;
    #####:  261:    case 2:
    #####:  262:        criteriu_suma(l);
    %%%%%:  262-block  0
call    0 never executed
    #####:  263:        break;
    #####:  264:    default:{
    #####:  265:        printf("Varianta inexistenta!");
    %%%%%:  265-block  0
call    0 never executed
    #####:  266:        getchar();
call    0 never executed
        -:  267:    }
        -:  268:
        -:  269:}
        -:  270:
        -:  271:  }
        -:  272:
        -:  273:  else
        -:  274:
        -:  275:  {
    #####:  276:      printf("Varianta inexistenta!");
    %%%%%:  276-block  0
call    0 never executed
    #####:  277:      getchar();
call    0 never executed
        -:  278:  }
        -:  279:
        -:  280:
    #####:  281:}
        -:  282:
function afisare called 0 returned 0% blocks executed 0%
    #####:  283:void afisare(lista* l)
        -:  284:{
        -:  285:    char *de_afisat;
    #####:  286:    de_afisat= afisare_service(l);
    %%%%%:  286-block  0
call    0 never executed
    #####:  287:    printf("%s", de_afisat);
call    0 never executed
    #####:  288:    getchar();
call    0 never executed
    #####:  289:    free (de_afisat);
        -:  290:
    #####:  291:}
        -:  292:
function adaugare called 0 returned 0% blocks executed 0%
    #####:  293:void adaugare(lista* l)
        -:  294:{   
        -:  295:    char params[100];
        -:  296:    char true_params[5][50];
        -:  297:    char* cuvant;
        -:  298:    //printf
    #####:  299:    printf("Dati id-ul, ziua, suma, tipul, si descrierea tranzactiei, separate prin ; :\n");
    %%%%%:  299-block  0
call    0 never executed
        -:  300:     //getchar();
    #####:  301:    gets(params);
call    0 never executed
        -:  302:    //scanf("%s",params);
    #####:  303:    cuvant = strtok(params, ";");
call    0 never executed
        -:  304:    int i;
        -:  305:
    #####:  306:    for(i=0;cuvant != NULL; i++)
    %%%%%:  306-block  0
branch  0 never executed
branch  1 never executed
    #####:  307:     {strcpy(true_params[i], cuvant);   
    #####:  308:     cuvant = strtok(NULL, ";");
    %%%%%:  308-block  0
call    0 never executed
        -:  309:     }
        -:  310:
    #####:  311:    if(i!=5)
    %%%%%:  311-block  0
branch  0 never executed
branch  1 never executed
        -:  312:    {
    #####:  313:printf("Paramtetrii invalizi!");
    %%%%%:  313-block  0
call    0 never executed
    #####:  314:getchar();
call    0 never executed
        -:  315:    }
        -:  316:    else 
        -:  317:    {
        -:  318:    enum tip tip;
    #####:  319:    int ok = 0;
        -:  320:    char tipul[50];
    #####:  321:    strcpy(tipul, true_params[3]);
    #####:  322:    if(strstr("intrare", tipul)!=NULL)
    %%%%%:  322-block  0
branch  0 never executed
branch  1 never executed
    #####:  323:      {tip = intrare; ok =1;}
    %%%%%:  323-block  0
    #####:  324:    if(strstr("iesire", tipul)!=NULL)
    %%%%%:  324-block  0
branch  0 never executed
branch  1 never executed
    #####:  325:      {tip = iesire; ok=1;}
    %%%%%:  325-block  0
        -:  326:
        -:  327:
    #####:  328:    for(i =0; i<3; i++)
    %%%%%:  328-block  0
    %%%%%:  328-block  1
    %%%%%:  328-block  2
branch  0 never executed
branch  1 never executed
        -:  329:    {
    #####:  330:        if(!is_number(true_params[i]))
    %%%%%:  330-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  331:        ok = 0;
    %%%%%:  331-block  0
        -:  332:    }
        -:  333:
        -:  334:  
    #####:  335: if(ok)
    %%%%%:  335-block  0
branch  0 never executed
branch  1 never executed
        -:  336:    {
    #####:  337:    char* descriere=(char*)malloc(sizeof(char)*50);
    #####:  338:    strcpy(descriere, true_params[4]);
    #####:  339:    int id = strtol(true_params[0],&strtol_pointer,10);
    %%%%%:  339-block  0
call    0 never executed
    #####:  340:    int ziua = strtol(true_params[1],&strtol_pointer,10);
call    0 never executed
    #####:  341:    int suma =strtol(true_params[2],&strtol_pointer,10);
call    0 never executed
        -:  342:
    #####:  343:      if( adaugare_service(id,suma,ziua,tip,descriere,l)==0)
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  344:      {
    #####:  345:          printf("Paramtetrii invalizi!");
    %%%%%:  345-block  0
call    0 never executed
    #####:  346:          getchar();
call    0 never executed
        -:  347:      }
        -:  348:           // free(descriere);
        -:  349:    }
        -:  350: else
        -:  351:    {
    #####:  352:printf("Paramtetrii invalizi!");
    %%%%%:  352-block  0
call    0 never executed
    #####:  353:getchar();
call    0 never executed
        -:  354:    }
        -:  355:    }
        -:  356:
    #####:  357:}
function stergere called 0 returned 0% blocks executed 0%
    #####:  358:void stergere(lista* l)
        -:  359:{char params[5];
    #####:  360:int ok = 1;
    #####:  361:    printf("Dati id-ul tranzactiei pe care dorim sa o stergem: \n");
    %%%%%:  361-block  0
call    0 never executed
    #####:  362:    gets(params);
call    0 never executed
        -:  363:
    #####:  364:     if(!is_number(params))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  365:        ok = 0;
    %%%%%:  365-block  0
        -:  366:    
    #####:  367:    if(!ok)
    %%%%%:  367-block  0
branch  0 never executed
branch  1 never executed
        -:  368:    {
    #####:  369:        printf("Id invalid!\n");
    %%%%%:  369-block  0
call    0 never executed
    #####:  370:        getchar();
call    0 never executed
        -:  371:
        -:  372:    }
        -:  373:    else
    #####:  374:    {       int id = strtol(params,&strtol_pointer,10);
    %%%%%:  374-block  0
call    0 never executed
    #####:  375:            if(!stergere_service(id, l))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  376:            {
    #####:  377:                printf("Stergere neefectuata!");
    %%%%%:  377-block  0
call    0 never executed
    #####:  378:                 getchar();  
call    0 never executed
        -:  379:            }
        -:  380:
        -:  381:    }
        -:  382:    
    #####:  383:}
        -:  384:/*
        -:  385:Functia din ui responsabila pentru a modifica o tranzactie existenta
        -:  386:Anunta utilziatorul daca id-ul nu exista
        -:  387:Preconditii: l este o lista
        -:  388:Postconditii: se va schimba tranzactia cu un id dat cu alta
        -:  389:*/
function modificare called 0 returned 0% blocks executed 0%
    #####:  390:void modificare(lista* l)
        -:  391:{
        -:  392:char params[100];
        -:  393:    char true_params[5][50];
        -:  394:    char* cuvant;
        -:  395:    //printf
    #####:  396:    printf("Dati id-ul tranzactiei pe care doriti sa o modificam, ziua, suma, tipul, si descrierea tranzactiei, separate prin ; :\n");
    %%%%%:  396-block  0
call    0 never executed
        -:  397:     //getchar();
    #####:  398:    gets(params);
call    0 never executed
        -:  399:    //scanf("%s",params);
    #####:  400:    cuvant = strtok(params, ";");
call    0 never executed
        -:  401:    int i;
        -:  402:
    #####:  403:    for(i=0;cuvant != NULL; i++)
    %%%%%:  403-block  0
branch  0 never executed
branch  1 never executed
    #####:  404:     {strcpy(true_params[i], cuvant);   
    #####:  405:     cuvant = strtok(NULL, ";");
    %%%%%:  405-block  0
call    0 never executed
        -:  406:     }
        -:  407:
    #####:  408:    if(i!=5)
    %%%%%:  408-block  0
branch  0 never executed
branch  1 never executed
        -:  409:    {
    #####:  410:printf("Paramtetrii invalizi!");
    %%%%%:  410-block  0
call    0 never executed
    #####:  411:getchar();
call    0 never executed
        -:  412:    }
        -:  413:    else 
        -:  414:    {
        -:  415:    enum tip tip;
    #####:  416:    int ok = 0;
        -:  417:    char tipul[50];
    #####:  418:    strcpy(tipul, true_params[3]);
    #####:  419:    if(strstr("intrare", tipul)!=NULL)
    %%%%%:  419-block  0
branch  0 never executed
branch  1 never executed
    #####:  420:      {tip = intrare; ok =1;}
    %%%%%:  420-block  0
    #####:  421:    if(strstr("iesire", tipul)!=NULL)
    %%%%%:  421-block  0
branch  0 never executed
branch  1 never executed
    #####:  422:      {tip = iesire; ok=1;}
    %%%%%:  422-block  0
        -:  423:
        -:  424:
    #####:  425:    for( i =0; i<3; i++)
    %%%%%:  425-block  0
    %%%%%:  425-block  1
    %%%%%:  425-block  2
branch  0 never executed
branch  1 never executed
        -:  426:    {
    #####:  427:        if(!is_number(true_params[i]))
    %%%%%:  427-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  428:        ok = 0;
    %%%%%:  428-block  0
        -:  429:    }
        -:  430:
        -:  431:  
    #####:  432: if(ok)
    %%%%%:  432-block  0
branch  0 never executed
branch  1 never executed
        -:  433:    {
    #####:  434:    char* descriere=(char*)malloc(sizeof(char)*50);
    #####:  435:    strcpy(descriere, true_params[4]);
    #####:  436:    int id = strtol(true_params[0],&strtol_pointer,10);
    %%%%%:  436-block  0
call    0 never executed
    #####:  437:    int ziua = strtol(true_params[1],&strtol_pointer,10);
call    0 never executed
    #####:  438:    int suma = strtol(true_params[2],&strtol_pointer,10);
call    0 never executed
        -:  439:    ///MODIFICARE SERVICE
        -:  440:
        -:  441:        
    #####:  442:        if( !modificare_service(id,suma,ziua,tip,descriere,l))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  443:       {
        -:  444:
    #####:  445:    printf("Modificare neefectuata!");
    %%%%%:  445-block  0
call    0 never executed
    #####:  446:    getchar();
call    0 never executed
        -:  447:       }
        -:  448:           // free(descriere);
        -:  449:    }
        -:  450: else
        -:  451:    {
    #####:  452:printf("Paramtetrii invalizi!");
    %%%%%:  452-block  0
call    0 never executed
    #####:  453:getchar();
call    0 never executed
        -:  454:    }
        -:  455:    }
        -:  456:
    #####:  457:}
