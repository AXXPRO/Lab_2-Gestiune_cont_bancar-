        -:    0:Source:C:/Users/Gabi/Desktop/Lab_2-Gestiune_cont_bancar-/UI/ui.c
        -:    0:Graph:C:\Users\Gabi\Desktop\Lab_2-Gestiune_cont_bancar-\cmake-build-debug-coverage\CMakeFiles\Lab_2_Gestiune_cont_bancar_.dir\UI\ui.c.gcno
        -:    0:Data:C:\Users\Gabi\Desktop\Lab_2-Gestiune_cont_bancar-\cmake-build-debug-coverage\CMakeFiles\Lab_2_Gestiune_cont_bancar_.dir\UI\ui.c.gcda
        -:    0:Runs:1
        -:    1:
        -:    2:#include <string.h>
        -:    3:#include <stdio.h>
        -:    4:#include <stdlib.h>
        -:    5:#include "..\Service\service.h"
        -:    6:#include "ui.h"
        -:    7://#include <stdlib.h>
        -:    8:
        -:    9:
        -:   10:/*
        -:   11:Functia ia un sir de caractere si returneaza daca este sau nu numar
        -:   12:PreconditiiL s - sir de caractere cu \0 la sfarsit
        -:   13:Postconditii: 1 daca poate fi numar, 0 altfel
        -:   14:*/
function is_number called 0 returned 0% blocks executed 0%
    #####:   15:int is_number(char* s)
        -:   16:{   
        -:   17:
    #####:   18:    if (strlen(s)==0)
    %%%%%:   18-block  0
branch  0 never executed
branch  1 never executed
    #####:   19:    return 0;
    %%%%%:   19-block  0
    #####:   20:    if(s[0]=='-')
    %%%%%:   20-block  0
branch  0 never executed
branch  1 never executed
    #####:   21:    return is_number(s+1);
    %%%%%:   21-block  0
call    0 never executed
    #####:   22:    for(int i = 0; i<strlen(s); i++)
    %%%%%:   22-block  0
    %%%%%:   22-block  1
    %%%%%:   22-block  2
branch  0 never executed
branch  1 never executed
        -:   23:    {
    #####:   24:        if(s[i] - '0' < 0 || s[i]- '0' > 9)
    %%%%%:   24-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   24-block  1
branch  2 never executed
branch  3 never executed
    #####:   25:        return 0;
    %%%%%:   25-block  0
        -:   26:    }
        -:   27:
    #####:   28:    return 1;
    %%%%%:   28-block  0
        -:   29:}
        -:   30:
function interface called 0 returned 0% blocks executed 0%
    #####:   31:void interface()
    #####:   32:{ system("cls");
    %%%%%:   32-block  0
call    0 never executed
    #####:   33:  printf("Alegeti optiunea pe care o doriti. Optiunile sunt urmatoarele:\n");
call    0 never executed
    #####:   34:  printf("1.Adaugare de tranzactii.\n");
call    0 never executed
    #####:   35:  printf("2.Modificare tranzactie existenta.\n");
call    0 never executed
    #####:   36:  printf("3.Stergere tranzactie existenta.\n");
call    0 never executed
    #####:   37:  printf("4.Vizualizare tranzactii dupa un criteriu.\n");
call    0 never executed
    #####:   38:  printf("6.Afisarea tranzactiilor din aplicatie.\n");
call    0 never executed
    #####:   39:  printf("7.Inchidere aplicatie.\n");
call    0 never executed
    #####:   40:  printf(">>>");
call    0 never executed
        -:   41:
    #####:   42:}
        -:   43:
        -:   44:
        -:   45:
        -:   46:
        -:   47:
function run_ui called 0 returned 0% blocks executed 0%
    #####:   48:void run_ui()
    #####:   49:{   lista* lista_tranzactii = creaza_lista();
    %%%%%:   49-block  0
call    0 never executed
        -:   50:    
        -:   51:    char choice[20];
    #####:   52:    int program_running = 1;
        -:   53:    int number_choice;
    #####:   54:    while(program_running)
    %%%%%:   54-block  0
branch  0 never executed
branch  1 never executed
        -:   55:    {
    #####:   56:        interface();
    %%%%%:   56-block  0
call    0 never executed
        -:   57:        //scanf("%s", choice);
    #####:   58:        gets(choice);
call    0 never executed
    #####:   59:        if(strlen(choice)==1)
branch  0 never executed
branch  1 never executed
        -:   60:        {
        -:   61:           
        -:   62:            //Run program
    #####:   63:                number_choice = choice[0]-'0';
    #####:   64:                switch (number_choice)
    %%%%%:   64-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
        -:   65:                {
    #####:   66:                    case 1:
    #####:   67:                    adaugare(lista_tranzactii);
    %%%%%:   67-block  0
call    0 never executed
    #####:   68:                    break;
    #####:   69:                    case 2:
    #####:   70:                    modificare(lista_tranzactii);
    %%%%%:   70-block  0
call    0 never executed
    #####:   71:                    break;
    #####:   72:                    case 3:
    #####:   73:                    stergere(lista_tranzactii);
    %%%%%:   73-block  0
call    0 never executed
    #####:   74:                    break;
    #####:   75:                    case 4:
    #####:   76:                    criteriu(lista_tranzactii);
    %%%%%:   76-block  0
call    0 never executed
    #####:   77:                    break;
    #####:   78:                    case 5:
        -:   79:                    /* code */
    #####:   80:                    break;
    %%%%%:   80-block  0
    #####:   81:                    case 6:
    #####:   82:                   afisare(lista_tranzactii);
    %%%%%:   82-block  0
call    0 never executed
    #####:   83:                    getchar();
call    0 never executed
        -:   84:
    #####:   85:                    break;
    #####:   86:                    case 7:
    #####:   87:                    program_running = 0;
    #####:   88:                    distruge(lista_tranzactii);
    %%%%%:   88-block  0
call    0 never executed
    #####:   89:                    break;
    #####:   90:                default:
        -:   91:                {
    #####:   92:                printf("Varianta inexistenta!\n");
    %%%%%:   92-block  0
call    0 never executed
    #####:   93:                gets(choice);
call    0 never executed
        -:   94:                }
    #####:   95:                    break;
        -:   96:                }
        -:   97:
        -:   98:
        -:   99:            
        -:  100:          
        -:  101:        }
    #####:  102:        else{printf("Varianta inexistenta!\n");
    %%%%%:  102-block  0
call    0 never executed
    #####:  103:                gets(choice);}
call    0 never executed
        -:  104:
        -:  105:
        -:  106:
        -:  107:    }
        -:  108:    
        -:  109:
    #####:  110:}
function criteriu_suma called 0 returned 0% blocks executed 0%
    #####:  111:void criteriu_suma(lista* l)
        -:  112:{
        -:  113:    char alegere[50];
        -:  114:    char suma[50];
    #####:  115:    printf("Cum doriti sa filtram dupa suma?\n1. Mai mari decat o suma data\n2. Mai mici decat o suma data\n");
    %%%%%:  115-block  0
call    0 never executed
    #####:  116:    gets(alegere);
call    0 never executed
        -:  117:
    #####:  118:    if(is_number(alegere))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  119:    {
    #####:  120:        int numar = atoi(alegere);
    %%%%%:  120-block  0
call    0 never executed
    #####:  121:        if(numar <1 || numar >2)
branch  0 never executed
branch  1 never executed
    %%%%%:  121-block  0
branch  2 never executed
branch  3 never executed
        -:  122:        {
    #####:  123:            printf("Varianta inexistenta!");
    %%%%%:  123-block  0
call    0 never executed
    #####:  124:            getchar();
call    0 never executed
        -:  125:        }
        -:  126:        else
        -:  127:
        -:  128:        {
    #####:  129:            printf("Dati suma cu care comparam\n");
    %%%%%:  129-block  0
call    0 never executed
    #####:  130:            gets(suma);
call    0 never executed
    #####:  131:            if(is_number(suma))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  132:            {
    #####:  133:                int suma_numar = atoi(suma);
    %%%%%:  133-block  0
call    0 never executed
        -:  134:                lista* l_temporara;
    #####:  135:                if(numar == 1)
branch  0 never executed
branch  1 never executed
        -:  136:                {
    #####:  137:                     l_temporara= criteriu_suma_service(l,suma_numar,1);
    %%%%%:  137-block  0
call    0 never executed
        -:  138:                }
        -:  139:                else
        -:  140:                {
    #####:  141:                   l_temporara= criteriu_suma_service(l,suma_numar,-1);
    %%%%%:  141-block  0
call    0 never executed
        -:  142:                }
    #####:  143:                afisare(l_temporara);
    %%%%%:  143-block  0
call    0 never executed
    #####:  144:                free(l_temporara);
        -:  145:            }
        -:  146:            else{
    #####:  147:                printf("Suma invalida!");
    %%%%%:  147-block  0
call    0 never executed
    #####:  148:                getchar();
call    0 never executed
        -:  149:            }
        -:  150:        }
        -:  151:
        -:  152:    }
        -:  153:    else
        -:  154:
        -:  155:    {
    #####:  156:        printf("Varianta inexistenta!");
    %%%%%:  156-block  0
call    0 never executed
    #####:  157:        getchar();
call    0 never executed
        -:  158:    }
        -:  159:
    #####:  160:}
function criteriu_tip called 0 returned 0% blocks executed 0%
    #####:  161:void criteriu_tip(lista* l)
        -:  162:{char alegere[50];
    #####:  163:    printf("Tranzactiile cu ce tip doriti sa le vedeti?\n1. Intrare\n2. Iesire");
    %%%%%:  163-block  0
call    0 never executed
    #####:  164:    gets(alegere);
call    0 never executed
    #####:  165:    if(is_number(alegere))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  166:    {
    #####:  167:        int numar = atoi(alegere);
    %%%%%:  167-block  0
call    0 never executed
    #####:  168:        if(numar <1 || numar >2)
branch  0 never executed
branch  1 never executed
    %%%%%:  168-block  0
branch  2 never executed
branch  3 never executed
        -:  169:        {
    #####:  170:            printf("Varianta inexistenta!");
    %%%%%:  170-block  0
call    0 never executed
    #####:  171:            getchar();
call    0 never executed
        -:  172:        }
        -:  173:        else
        -:  174:
        -:  175:        {
        -:  176:            enum tip tipul;
    #####:  177:            if(numar == 1)
    %%%%%:  177-block  0
branch  0 never executed
branch  1 never executed
    #####:  178:                tipul = intrare;
    %%%%%:  178-block  0
        -:  179:            else
    #####:  180:             tipul = iesire;
    %%%%%:  180-block  0
        -:  181:            lista* l_temporara;
    #####:  182:            l_temporara = criteriu_tip_service(l, tipul);
    %%%%%:  182-block  0
call    0 never executed
    #####:  183:            afisare(l_temporara);
call    0 never executed
        -:  184:
    #####:  185:            free(l_temporara);
        -:  186:
        -:  187:        }
        -:  188:
        -:  189:    }
        -:  190:    else
        -:  191:
        -:  192:    {
    #####:  193:        printf("Varianta inexistenta!");
    %%%%%:  193-block  0
call    0 never executed
    #####:  194:        getchar();
call    0 never executed
        -:  195:    }
        -:  196:
        -:  197:
    #####:  198:}
function criteriu called 0 returned 0% blocks executed 0%
    #####:  199:void criteriu(lista* l)
        -:  200:{
        -:  201:    char alegere[50];
    #####:  202:  printf("Ce criteriu de sortare doriti?\n 1. Dupa tip\n 2. Dupa suma\n");
    %%%%%:  202-block  0
call    0 never executed
    #####:  203: gets(alegere);
call    0 never executed
    #####:  204:  if(is_number(alegere))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  205:  {
    #####:  206:int numar = atoi(alegere);
    %%%%%:  206-block  0
call    0 never executed
        -:  207:
    #####:  208:switch(numar)
branch  0 never executed
branch  1 never executed
branch  2 never executed
        -:  209:
        -:  210:{
    #####:  211:    case 1:
    #####:  212:         criteriu_tip(l);
    %%%%%:  212-block  0
call    0 never executed
    #####:  213:        break;
    #####:  214:    case 2:
    #####:  215:        criteriu_suma(l);
    %%%%%:  215-block  0
call    0 never executed
    #####:  216:        break;
    #####:  217:    default:{
    #####:  218:        printf("Varianta inexistenta!");
    %%%%%:  218-block  0
call    0 never executed
    #####:  219:        getchar();
call    0 never executed
        -:  220:    }
        -:  221:
        -:  222:}
        -:  223:
        -:  224:  }
        -:  225:
        -:  226:  else
        -:  227:
        -:  228:  {
    #####:  229:      printf("Varianta inexistenta!");
    %%%%%:  229-block  0
call    0 never executed
    #####:  230:      getchar();
call    0 never executed
        -:  231:  }
        -:  232:
        -:  233:
    #####:  234:}
        -:  235:
function afisare called 0 returned 0% blocks executed 0%
    #####:  236:void afisare(lista* l)
        -:  237:{
        -:  238:    char *de_afisat;
    #####:  239:    de_afisat= afisare_service(l);
    %%%%%:  239-block  0
call    0 never executed
    #####:  240:    printf("%s", de_afisat);
call    0 never executed
    #####:  241:    getchar();
call    0 never executed
    #####:  242:    free (de_afisat);
        -:  243:
    #####:  244:}
        -:  245:
function adaugare called 0 returned 0% blocks executed 0%
    #####:  246:void adaugare(lista* l)
        -:  247:{   
        -:  248:    char params[100];
        -:  249:    char true_params[5][50];
        -:  250:    char* cuvant;
        -:  251:    //printf
    #####:  252:    printf("Dati id-ul, ziua, suma, tipul, si descrierea tranzactiei, separate prin ; :\n");
    %%%%%:  252-block  0
call    0 never executed
        -:  253:     //getchar();
    #####:  254:    gets(params);
call    0 never executed
        -:  255:    //scanf("%s",params);
    #####:  256:    cuvant = strtok(params, ";");
call    0 never executed
        -:  257:    int i;
        -:  258:
    #####:  259:    for(i=0;cuvant != NULL; i++)
    %%%%%:  259-block  0
branch  0 never executed
branch  1 never executed
    #####:  260:     {strcpy(true_params[i], cuvant);   
    #####:  261:     cuvant = strtok(NULL, ";");
    %%%%%:  261-block  0
call    0 never executed
        -:  262:     }
        -:  263:
    #####:  264:    if(i!=5)
    %%%%%:  264-block  0
branch  0 never executed
branch  1 never executed
        -:  265:    {
    #####:  266:printf("Paramtetrii invalizi!");
    %%%%%:  266-block  0
call    0 never executed
    #####:  267:getchar();
call    0 never executed
        -:  268:    }
        -:  269:    else 
        -:  270:    {
        -:  271:    enum tip tip;
    #####:  272:    int ok = 0;
        -:  273:    char tipul[50];
    #####:  274:    strcpy(tipul, true_params[3]);
    #####:  275:    if(strstr("intrare", tipul)!=NULL)
    %%%%%:  275-block  0
branch  0 never executed
branch  1 never executed
    #####:  276:      {tip = intrare; ok =1;}
    %%%%%:  276-block  0
    #####:  277:    if(strstr("iesire", tipul)!=NULL)
    %%%%%:  277-block  0
branch  0 never executed
branch  1 never executed
    #####:  278:      {tip = iesire; ok=1;}
    %%%%%:  278-block  0
        -:  279:
        -:  280:
    #####:  281:    for(int i =0; i<3; i++)
    %%%%%:  281-block  0
    %%%%%:  281-block  1
    %%%%%:  281-block  2
branch  0 never executed
branch  1 never executed
        -:  282:    {
    #####:  283:        if(!is_number(true_params[i]))
    %%%%%:  283-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  284:        ok = 0;
    %%%%%:  284-block  0
        -:  285:    }
        -:  286:
        -:  287:  
    #####:  288: if(ok)
    %%%%%:  288-block  0
branch  0 never executed
branch  1 never executed
        -:  289:    {
    #####:  290:    char* descriere=(char*)malloc(sizeof(char)*50);
    #####:  291:    strcpy(descriere, true_params[4]);
    #####:  292:    int id = atoi(true_params[0]);
    %%%%%:  292-block  0
call    0 never executed
    #####:  293:    int ziua = atoi(true_params[1]);
call    0 never executed
    #####:  294:    int suma = atoi(true_params[2]);
call    0 never executed
        -:  295:
    #####:  296:      if( adaugare_service(id,suma,ziua,tip,descriere,l)==0)
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  297:      {
    #####:  298:          printf("Paramtetrii invalizi!");
    %%%%%:  298-block  0
call    0 never executed
    #####:  299:          getchar();
call    0 never executed
        -:  300:      }
        -:  301:           // free(descriere);
        -:  302:    }
        -:  303:    else 
        -:  304:    {
    #####:  305:printf("Paramtetrii invalizi!");
    %%%%%:  305-block  0
call    0 never executed
    #####:  306:getchar();
call    0 never executed
        -:  307:    }
        -:  308:    }
        -:  309:
    #####:  310:}
function stergere called 0 returned 0% blocks executed 0%
    #####:  311:void stergere(lista* l)
        -:  312:{char params[5];
    #####:  313:int ok = 1;
    #####:  314:    printf("Dati id-ul tranzactiei pe care dorim sa o stergem: \n");
    %%%%%:  314-block  0
call    0 never executed
    #####:  315:    gets(params);
call    0 never executed
        -:  316:
    #####:  317:     if(!is_number(params))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  318:        ok = 0;
    %%%%%:  318-block  0
        -:  319:    
    #####:  320:    if(!ok)
    %%%%%:  320-block  0
branch  0 never executed
branch  1 never executed
        -:  321:    {
    #####:  322:        printf("Id invalid!\n");
    %%%%%:  322-block  0
call    0 never executed
    #####:  323:        getchar();
call    0 never executed
        -:  324:
        -:  325:    }
        -:  326:    else
    #####:  327:    {       int id = atoi(params);
    %%%%%:  327-block  0
call    0 never executed
    #####:  328:            if(!stergere_service(id, l))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  329:            {
    #####:  330:                printf("Stergere neefectuata!");
    %%%%%:  330-block  0
call    0 never executed
    #####:  331:                 getchar();  
call    0 never executed
        -:  332:            }
        -:  333:
        -:  334:    }
        -:  335:    
    #####:  336:}
        -:  337:/*
        -:  338:Functia din ui responsabila pentru a modifica o tranzactie existenta
        -:  339:Anunta utilziatorul daca id-ul nu exista
        -:  340:Preconditii: l este o lista
        -:  341:Postconditii: se va schimba tranzactia cu un id dat cu alta
        -:  342:*/
function modificare called 0 returned 0% blocks executed 0%
    #####:  343:void modificare(lista* l)
        -:  344:{
        -:  345:char params[100];
        -:  346:    char true_params[5][50];
        -:  347:    char* cuvant;
        -:  348:    //printf
    #####:  349:    printf("Dati id-ul tranzactiei pe care doriti sa o modificam, ziua, suma, tipul, si descrierea tranzactiei, separate prin ; :\n");
    %%%%%:  349-block  0
call    0 never executed
        -:  350:     //getchar();
    #####:  351:    gets(params);
call    0 never executed
        -:  352:    //scanf("%s",params);
    #####:  353:    cuvant = strtok(params, ";");
call    0 never executed
        -:  354:    int i;
        -:  355:
    #####:  356:    for(i=0;cuvant != NULL; i++)
    %%%%%:  356-block  0
branch  0 never executed
branch  1 never executed
    #####:  357:     {strcpy(true_params[i], cuvant);   
    #####:  358:     cuvant = strtok(NULL, ";");
    %%%%%:  358-block  0
call    0 never executed
        -:  359:     }
        -:  360:
    #####:  361:    if(i!=5)
    %%%%%:  361-block  0
branch  0 never executed
branch  1 never executed
        -:  362:    {
    #####:  363:printf("Paramtetrii invalizi!");
    %%%%%:  363-block  0
call    0 never executed
    #####:  364:getchar();
call    0 never executed
        -:  365:    }
        -:  366:    else 
        -:  367:    {
        -:  368:    enum tip tip;
    #####:  369:    int ok = 0;
        -:  370:    char tipul[50];
    #####:  371:    strcpy(tipul, true_params[3]);
    #####:  372:    if(strstr("intrare", tipul)!=NULL)
    %%%%%:  372-block  0
branch  0 never executed
branch  1 never executed
    #####:  373:      {tip = intrare; ok =1;}
    %%%%%:  373-block  0
    #####:  374:    if(strstr("iesire", tipul)!=NULL)
    %%%%%:  374-block  0
branch  0 never executed
branch  1 never executed
    #####:  375:      {tip = iesire; ok=1;}
    %%%%%:  375-block  0
        -:  376:
        -:  377:
    #####:  378:    for(int i =0; i<3; i++)
    %%%%%:  378-block  0
    %%%%%:  378-block  1
    %%%%%:  378-block  2
branch  0 never executed
branch  1 never executed
        -:  379:    {
    #####:  380:        if(!is_number(true_params[i]))
    %%%%%:  380-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  381:        ok = 0;
    %%%%%:  381-block  0
        -:  382:    }
        -:  383:
        -:  384:  
    #####:  385: if(ok)
    %%%%%:  385-block  0
branch  0 never executed
branch  1 never executed
        -:  386:    {
    #####:  387:    char* descriere=(char*)malloc(sizeof(char)*50);
    #####:  388:    strcpy(descriere, true_params[4]);
    #####:  389:    int id = atoi(true_params[0]);
    %%%%%:  389-block  0
call    0 never executed
    #####:  390:    int ziua = atoi(true_params[1]);
call    0 never executed
    #####:  391:    int suma = atoi(true_params[2]);
call    0 never executed
        -:  392:    ///MODIFICARE SERVICE
        -:  393:
        -:  394:        
    #####:  395:       if( !modificare_service(id,suma,ziua,tip,descriere,l))
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  396:       {
        -:  397:
    #####:  398:    printf("Modificare neefectuata!");
    %%%%%:  398-block  0
call    0 never executed
    #####:  399:    getchar();
call    0 never executed
        -:  400:       }
        -:  401:           // free(descriere);
        -:  402:    }
        -:  403:    else 
        -:  404:    {
    #####:  405:printf("Paramtetrii invalizi!");
    %%%%%:  405-block  0
call    0 never executed
    #####:  406:getchar();
call    0 never executed
        -:  407:    }
        -:  408:    }
        -:  409:
    #####:  410:}
